<?xml version="1.0" encoding="UTF-8"?>    
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="insertDataDaoImpl">
	<insert id="insertData" parameterType="map" >
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="code">
			<choose>
				<when test="fileName != 'jgxx'">
					select ${fileName}_CODE.currval from dual
				</when>
				<otherwise>
					select -1 as currval from dual
				</otherwise>
			</choose>
		</selectKey>
		
		insert  into  ${tableName}
	     <foreach collection="last_row" open="(" close=")" separator="," item="type">
                ${type}
         </foreach> 
		values
		<foreach collection="configList" open="(" close=")" separator="," item="item">
			<choose>  
				<when test='item.FIELD_TYPE == "date" || item.FIELD_TYPE == "DATE" '>  
					to_date(#{${item.FIELD_ID}, jdbcType=VARCHAR},'YYYY-MM-DD')
				</when>  
				<otherwise>  
					<choose>
					<when test='item.FIELD_TYPE == "time" || item.FIELD_TYPE == "TIME" '>  
						to_date(#{${item.FIELD_ID}, jdbcType=VARCHAR},'YYYY-MM-DD HH24:MI:SS')
					</when> 
					<otherwise>
						#{${item.FIELD_ID}, jdbcType=VARCHAR}
					</otherwise>
					</choose> 
				</otherwise>  
			</choose>
         </foreach> 
	</insert>
	<insert id="insertBsglData" parameterType="map" >
	        insert into BSGL (SJRQ,WJBM,NBJGH,USERNAME,YMDHMS,CONTENT,CODE) 
	        values( to_date(#{SJRQ}, 'YYYY-MM-DD') , #{fileName} ,#{nbjgh},#{USERNAME}, sysdate,'导入成功  ,共1条数据', USER_MANAGER_ID.nextval ) 
	</insert>
	<insert id="insertRecordsOperationLogData" parameterType="map" >
	        insert into RECORDS_OPERATION_LOG (WJBM,RECORD_CODE,USERNAME,CREATE_DATE,TYPE)
			values (#{wjbm},${recordCode},#{username},sysdate,#{type})
	</insert>
	<!-- 获取当前用户的子类 -->
	<select id="getAllAuth" resultType="Map" parameterType="Map">
		select BR_NO nbjgh from hbjyods.JRJGXX m
				start with m.BR_NO = #{nbjgh,jdbcType=VARCHAR } connect by m.SJGLJGNBJGH = prior m.BR_NO
	</select>
	
	<!-- 获取表中所对应的内部机构号 -->
	<select id="getTable_nbjgh" resultType="Map" parameterType="Map">
		select  tablename,table_nbjgh from USER_AUTHORITY where tablename is not null and tablename = LOWER(#{tableName,jdbcType=VARCHAR })
	</select>
	<insert id="insertDateAnnounce" parameterType="map">
	
	</insert>
	<insert id="insertSelective" parameterType="map">
    insert into t_announcement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="announcementTitle != null">
        announcement_title,
      </if>
      <if test="publishRange != null">
        publish_range,
      </if>
      <if test="announcementContent != null">
        announcement_content,
      </if>
      <if test="annexName != null">
        annex_name,
      </if>
      <if test="annexUrl != null">
        annex_url,
      </if>
      <if test="viewNum != null">
        view_num,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="JRJGMC != null">
        JRJGMC,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="message != null">
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="announcementTitle != null">
        #{announcementTitle,jdbcType=VARCHAR},
      </if>
      <if test="publishRange != null">
        #{publishRange,jdbcType=VARCHAR},
      </if>
      <if test="announcementContent != null">
        #{announcementContent,jdbcType=VARCHAR},
      </if>
      <if test="annexName != null">
        #{annexName,jdbcType=VARCHAR},
      </if>
      <if test="annexUrl != null">
        #{annexUrl,jdbcType=VARCHAR},
      </if>
      <if test="viewNum != null">
        #{viewNum,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="JRJGMC != null">
        #{JRJGMC,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertfgwjSelective" parameterType="map">
        insert into t_regulation
        <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="regulationTitle != null">
        regulation_title,
      </if>
      <if test="publishRange != null">
        organization,
      </if>
      <if test="username != null">
        creator,
      </if>
      <if test="createTime != null">
      create_time,
      </if>
      <if test="annexName != null">
      annex_name,
      </if>
      <if test="annexUrl != null">
      annex_url,
      </if>
     </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="regulationTitle != null">
        #{regulationTitle,jdbcType=VARCHAR},
      </if>
      <if test="publishRange != null">
        #{publishRange,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="annexName != null">
        #{annexName,jdbcType=VARCHAR},
      </if>
      <if test="annexUrl != null">
        #{annexUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
<!-- 各业务自动生成字段的insert方法 START  -->
	<insert id="customInsertData" parameterType="map" >
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="code">
			<choose>
				<when test="fileName != 'jgxx'">
					select ${fileName}_CODE.currval from dual
				</when>
				<otherwise>
					select -1 as currval from dual
				</otherwise>
			</choose>
		</selectKey>
		
		insert  into  ${tableName}
	    <foreach collection="last_row" open="(" close=")" separator="," item="type">
                ${type}
        </foreach>
		<!-- 不同的业务引入不同的SQL片段 -->
        <choose>
        	<when test="fileName == 'jrkc'">
        		<include refid="jrkcCustomInsertDataSelect"></include>
        	</when>
        	<when test="fileName == 'szqk'">
        		<include refid="szqkCustomInsertDataSelect"></include>
        	</when>
        </choose>
	</insert>
	
	<!-- jrkc-银行业金融机构现金库存券别统计表（月报） START -->
	<sql id="jrkcCustomInsertDataSelect">
		select a.sjrq,
		       a.jrjgbm,
		       a.nbjgh,
		       a.qbmc,
		       a.jejk,
		       a.jezzsb,
		       a.jeqt,
		       (a.jejk + a.jezzsb + a.jeqt) as jehj,
		       (a.jejk - nvl(c.jejk, 0)) as TBZJJK,
		       (a.jezzsb - nvl(c.jezzsb, 0)) as TBZJZZSB,
		       (a.jeqt - nvl(c.jeqt, 0)) as TBZJQT,
		       (a.jejk + a.jezzsb + a.jeqt - nvl(c.jejk, 0) - nvl(c.jezzsb, 0) -
		           nvl(c.jeqt, 0)) as TBZJHJ,
		       case
		         when nvl(c.jejk, 0) = 0 then
		          0
		         else
		          (a.jejk - nvl(c.jejk, 0)) / c.jejk
		       end as TBBHJK,
		       case
		         when nvl(c.jezzsb, 0) = 0 then
		          0
		         else
		          (a.jezzsb - nvl(c.jezzsb, 0)) / c.jezzsb
		       end as TBBHZZSB,
		       case
		         when nvl(c.jeqt, 0) = 0 then
		          0
		         else
		          (a.jeqt - nvl(c.jeqt, 0)) / c.jeqt
		       end as TBBHQT,
		       case
		         when (nvl(c.jejk, 0) + nvl(c.jezzsb, 0) + nvl(c.jeqt, 0)) = 0 then
		          0
		         else
		          ((a.jejk + a.jezzsb + a.jeqt) -
		          (nvl(c.jejk, 0) + nvl(c.jezzsb, 0) + nvl(c.jeqt, 0))) /
		          (nvl(c.jejk, 0) + nvl(c.jezzsb, 0) + nvl(c.jeqt, 0))
		       end as TBBHHJ,
		       case
		         when (a.jejk + a.jezzsb + a.jeqt) = 0 then
		          0
		         else
		          a.jejk * 100/ (a.jejk + a.jezzsb + a.jeqt)
		       end as ZBJK,
		       case
		         when (a.jejk + a.jezzsb + a.jeqt) = 0 then
		          0
		         else
		          a.jezzsb  * 100/ (a.jejk + a.jezzsb + a.jeqt)
		       end as ZBZZSB,
		       case
		         when (a.jejk + a.jezzsb + a.jeqt) = 0 then
		          0
		         else
		          a.jeqt  * 100/ (a.jejk + a.jezzsb + a.jeqt)
		       end as ZBQT,
		       case
		         when (a.jejk + a.jezzsb + a.jeqt) = 0 then
		          0
		         else
		          (a.jejk + a.jezzsb + a.jeqt)  * 100/ (a.jejk + a.jezzsb + a.jeqt)
		       end as ZBHJ,
		       a.sblx,
		       a.bzxx,
		       null as "code"
		  from (
		    select 
		        to_date(#{SJRQ, jdbcType=VARCHAR},'yyyy-mm-dd') as SJRQ,
		        #{JRJGBM, jdbcType=VARCHAR} as JRJGBM,
		        #{NBJGH, jdbcType=VARCHAR} as NBJGH,
		        #{QBMC, jdbcType=VARCHAR} as QBMC,
		        #{JEJK, jdbcType=VARCHAR} as JEJK,
		        #{JEZZSB, jdbcType=VARCHAR} as JEZZSB,
		        #{JEQT, jdbcType=VARCHAR} as JEQT,
		        #{SBLX, jdbcType=VARCHAR} as SBLX,
		        #{BZXX, jdbcType=VARCHAR} as BZXX
		     from dual
		) a
		left join (
			select b.sjrq,
                   b.jrjgbm,
                   b.nbjgh,
                   b.qbmc,
                   b.jejk,
                   b.jezzsb,
                   b.jeqt,
                   (b.jejk + b.jezzsb + b.jeqt) as jehj
              from hbjy.Syyh_JRkc b
             where add_months(to_date(#{SJRQ, jdbcType=VARCHAR}, 'yyyy-mm-dd'), -12) = b.sjrq
             	and b.qbmc = #{QBMC, jdbcType=VARCHAR} 
		) c on a.nbjgh = c.nbjgh
	</sql>
	<!-- jrkc-银行业金融机构现金库存券别统计表（月报） END -->
	
	<!-- szqk-银行业金融机构现金收支情况统计表（季报） START -->
	<sql id="szqkCustomInsertDataSelect">
		select a.sjrq,
         a.jrjgbm,
         a.nbjgh,
         a.xmmc,
         a.je_bq,
         a.je_nlj,
         (a.je_bq - nvl(c.je_bq,0)) as TBZJ_BQ,
         (a.je_nlj - nvl(c.je_nlj,0)) as TBZJ_NLJ,
         case when nvl(c.je_bq,0)=0 then 0 else (a.je_bq - c.JE_BQ) * 100/c.JE_BQ end as TBZF_BQ,
         case when nvl(c.je_nlj,0)=0 then 0 else (a.je_nlj - c.je_nlj) * 100/c.je_nlj end as TBZF_NLJ,
         case when nvl(c.je_bq,0)=0 then 0 else  a.je_bq * 100/ c.JE_BQ end as ZB_BQ,
         case when nvl(c.je_nlj,0)=0 then 0 else  a.je_nlj * 100/ c.JE_NLJ end as ZB_NLJ,
         a.sblx,
         a.bzxx,
         null as code
    from (
        select 
        to_date(#{SJRQ, jdbcType=VARCHAR},'yyyy-mm-dd') as SJRQ,
        #{JRJGBM, jdbcType=VARCHAR} as JRJGBM,
        #{NBJGH, jdbcType=VARCHAR} as NBJGH,
        #{XMMC, jdbcType=VARCHAR} as XMMC,
        #{JE_BQ, jdbcType=VARCHAR} as JE_BQ,
        #{JE_NLJ, jdbcType=VARCHAR} as JE_NLJ,
        #{SBLX, jdbcType=VARCHAR} as SBLX,
        #{BZXX, jdbcType=VARCHAR} as BZXX
        from dual
        ) a
    left join (select b.sjrq, b.jrjgbm, b.nbjgh, b.xmmc, b.JE_BQ, b.JE_NLJ
                 from hbjy.syyh_szqk b
                where add_months(to_date(#{SJRQ, jdbcType=VARCHAR}, 'yyyy-mm-dd'), -12) = b.sjrq
                	and b.xmmc = #{XMMC, jdbcType=VARCHAR}
    ) c
    on a.nbjgh=c.nbjgh
	</sql>
	<!-- szqk-银行业金融机构现金收支情况统计表（季报） END -->
<!-- 各业务自动生成字段的insert方法 END  -->
</mapper>